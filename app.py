import streamlit as st
import pandas as pd
from PIL import Image
import subprocess
import os

# Title and logo
st.title("Payment Arrangements System Replication")
image = Image.open('profile_photo.png')
st.image(image, caption='Baci Akom', width=200, use_column_width=False)

# File uploader for data
st.header("Upload your CSV file")
uploaded_file = st.file_uploader("", type=["csv"])

st.markdown("---")  # Add a horizontal rule for separation

# Placeholders for data sections
processed_data_placeholder = st.empty()
payment_schedule_placeholder = st.empty()
original_data_placeholder = st.empty()

if uploaded_file is not None:
    # Save uploaded file
    input_path = os.path.join("data", "uploaded_data.csv")
    with open(input_path, "wb") as f:
        f.write(uploaded_file.getbuffer())

    # Run R script to process the data
    output_dir = "data"
    result = subprocess.run(["Rscript", "payment_arrangements.R", input_path, output_dir], capture_output=True, text=True)
    if result.returncode == 0:
        st.success("Data processed successfully!")
        
        # Load the generated files
        processed_data = pd.read_excel(os.path.join(output_dir, "Processed_Data.xlsx"))
        payment_schedule = pd.read_excel(os.path.join(output_dir, "Payment_Schedule.xlsx"))
        original_data = pd.read_csv(input_path)
        
        # Update the displayed data
        with processed_data_placeholder.container():
            st.header("Processed Data")
            st.markdown("This section displays the processed data generated by the system, including the calculated last payment date and last payment amount for each arrangement.")
            st.write(processed_data)
        
        with payment_schedule_placeholder.container():
            st.header("Payment Schedule")
            st.markdown("This section displays the detailed payment schedule for each customer, including all planned payment dates and payment amounts generated by the system.")
            st.write(payment_schedule)
        
        with original_data_placeholder.container():
            st.header("Original Data")
            st.markdown("This section displays the original data provided by the company, including anonymized arrangements.")
            st.write(original_data)
        
        # Download processed data
        st.header("Download Processed Data")
        csv_processed = processed_data.to_csv(index=False)
        st.download_button(
            label="Download Processed Data as CSV",
            data=csv_processed,
            file_name='Processed_Data.csv',
            mime='text/csv',
        )
        
        # Download payment schedule
        st.header("Download Payment Schedule")
        csv_schedule = payment_schedule.to_csv(index=False)
        st.download_button(
            label="Download Payment Schedule as CSV",
            data=csv_schedule,
            file_name='Payment_Schedule.csv',
            mime='text/csv',
        )
    else:
        st.error("Error in processing data")
        st.text(result.stderr)
else:
    # Load the default data
    default_processed_data = pd.read_excel("data/Processed_Data.xlsx")
    default_payment_schedule = pd.read_excel("data/Payment_Schedule.xlsx")
    default_original_data = pd.read_csv("data/CaseStudy Data.csv")
    
    # Display the default data
    with processed_data_placeholder.container():
        st.header("Processed Data")
        st.markdown("This section displays the processed data generated by the system, including the calculated last payment date and last payment amount for each arrangement.")
        st.write(default_processed_data)
    
    with payment_schedule_placeholder.container():
        st.header("Payment Schedule")
        st.markdown("This section displays the detailed payment schedule for each customer, including all planned payment dates and payment amounts generated by the system.")
        st.write(default_payment_schedule)
    
    with original_data_placeholder.container():
        st.header("Original Data")
        st.markdown("This section displays the original data provided by the company, including anonymized arrangements.")
        st.write(default_original_data)

# Footer
st.markdown("Developed by Baci Akom")
st.markdown("Contact: [baciakom](https://www.linkedin.com/in/basseyakom/)")   
st.markdown("Source code: [GitHub](https://github.com/Baci-Ak/Payment-Arrangements-System-Replication/tree/main)")
st.markdown("Report issues: [GitHub](https://github.com/Baci-Ak/Payment-Arrangements-System-Replication/issues)")
st.markdown("Acknowledgements: [RStudio](https://rstudio.com/)")

